{{/* Groupe dictionnaire */}}
{{$groupe := sdict}}
{{with (dbGet .Server.ID "groupe")}}
  {{$groupe = sdict .Value}}
{{end}}

{{$pos := sdict}}
{{with (dbGet 0 "position")}}
  {{$pos = sdict .Value}}
{{end}}

{{/* Get joueur */}}
{{$name :=(reFind `((>\S*[^<\:\w+\:\d+)]>\S*)|>\S*)` .Message.Content)}}
{{$name = reReplace `>` $name ""}}
{{$name = reReplace `\s` $name ""}}
	{{$user := .Member.Nick}}
	{{$id:= .User.ID}}
	{{if $name}}
		{{$user = title $name}}
		{{$idperso := (toRune (lower $name))}}
		{{range $idperso}}
			{{- $id = add $id . }}
		{{- end}}
	{{else if eq (len $user) 0}}
		{{$user = .User.Username}}
	{{end}}
{{$hpS := sdict }}{{with (dbGet 0 "HP")}}{{$hpS = sdict .Value}}{{end}}{{with ($hpS.Get (str $id))}}{{$user = .Personnage}}{{end}}
{{$idict := str $id}}

{{$bool := false}}
{{range $i, $j := $groupe}}
  {{- if eq $idict $i}}
    {{- $bool = true}}
  {{- end -}}
{{end}}
{{$pa := $groupe.Get (str $id)}}
	{{if not $pa}}
		{{$groupe.Set (str $id) 4}}
		{{$pa = 4}}
	{{end}}
{{dbSet .Server.ID "groupe" $groupe}}
{{$desc := ""}}

{{if .CmdArgs}}
  {{$posarg := index .CmdArgs 0}}
  {{$item := $user}}
  {{$s := "à couvert"}}
  {{if $name}}
    {{if and (ge (len .CmdArgs) 3) (not (reFind `-s` .Message.Content))}}
      {{$item = index .CmdArgs 1}}
      {{$s = 1}}
    {{else if and (ge (len .CmdArgs) 3) (reFind `-s` (index .CmdArgs 1))}}
      {{$s = index .CmdArgs 2}}
    {{end}}
  {{else}}
    {{if and (ge (len .CmdArgs) 1) (not (reFind `-s` .Message.Content))}}
      {{$item = index .CmdArgs 1}}
      {{$s = 1}}
    {{else if and (ge (len .CmdArgs 1)) (reFind `-s` (index .CmdArgs 1))}}
      {{$s = index .CmdArgs 2}}
    {{end}}
  {{end}}
  {{if eq $posarg "1" "2" "3"}}
    {{$p := sdict}}
    {{with ($pos.Get $posarg)}}
      {{$p = sdict .}}
    {{end}}
    {{if gt $pa 0}}
      {{if eq (toInt $s) 1}}
        {{$p.Set $item (add ($p.Get $item) 1)}}
        {{$desc = print $user " a perdu " $item " au rang " $posarg "."}}
      {{else}}
        {{$p.Set $item $s}}
        {{$desc = print $user " s'est déplacé au rang " $posarg ", et est en position " $s "."}}
      {{end}}
      {{$pos.Set $posarg $p}}
      {{$p.Get $item}}
      {{range $i, $j := $pos}}
        {{$j = sdict $j}}
        {{if and ($j.Get $item) (ne $i $posarg)}}
          {{if eq (toInt $s) 1}}
            {{$j.Set $item (sub ($j.Get $item) 1)}}
          {{else}}
            {{$j.Del $item}}
          {{end}}
          {{$pos.Set $i $j }}
        {{end}}
      {{end}}
      {{$pos.Set $posarg $p}}
    {{else}}
      {{$desc = "PA insuffisants pour réaliser l'action."}}
    {{end}}
  {{else if eq $posarg "-del"}}
    {{if ge (len .CmdArgs) 2}}
      {{$item = index .CmdArgs 1}}
      {{range $i, $j := $pos}}
        {{$j = sdict $j}}
        {{if (ge (toInt ($j.Get $item)) 1)}}
        {{$i}}
        {{$j.Get $user}} {{$j.Get $item}}
          {{if and ($j.Get $user) ($j.Get $item)}}
            {{$j.Set $item (sub ($j.Get $item) 1) }}
            {{$desc = print $user " a retiré " $item "de la position" $i "."}}
            {{if le ($j.Get $item) 0}}
              {{$j.Del $item}} 
            {{end}}
            {{$pos.Set $item $j}}
          {{else}}
            {{$desc = "L'objet n'existe pas."}}
          {{end}}
          {{$pos.Set $i $j}}
        {{else}} 
          {{$desc = "Vous ne pouvez pas récupérer un objet qui n'est pas sur le même rang que vous."}}
        {{end}}
      {{end}}
    {{else}}
      {{$desc = "Erreur, vous avez oublié le nom de l'objet"}}
    {{end}}
  {{else}}
    {{$desc = "Erreur : vous devez rentrer une commande."}}
  {{end}}
{{else}}  
  {{$desc = "Erreur : vous devez rentrer une commande"}}
{{end}}
{{sendMessage nil $desc}}
{{dbSet 0 "position" $pos}}