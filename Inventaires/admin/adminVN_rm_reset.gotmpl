{{$compo := sdict}}
{{with (dbGet .Server.ID "compo")}}
	{{$compo = sdict .Value}}
{{end}}

{{$armes := sdict}}
{{with (dbGet 0 "armelist")}}
	{{$armes = sdict .Value}}
{{end}}

{{$module := sdict}}
{{with (dbGet .Server.ID "module")}}
	{{$module = sdict .Value}}
{{end}}

{{$implant := sdict }}
{{with (dbGet .Server.ID "implant")}}
	{{$implant = sdict .Value}}
{{end}}

{{$chargeur := sdict}}
{{with (dbGet 0 "chargeur_Multi")}}
	{{$chargeur = sdict .Value}}
{{end}}

{{$soin := sdict}}
{{with (dbGet 0 "soin")}}
	{{$soin = sdict .Value}}
{{end}}

{{$cmd := reFind `-(rm|reset)` .Message.Content}}

{{$log := ""}}
{{$q := 1}}
{{$item := ""}}

{{if .CmdArgs}}
  {{$flag := reFind `\-(?i)(armes?|modules?|implants?|soins?|BC|LC|CB|SF|CU|bc|lc|cb|sf|cu|chargeur|reset)` (index .CmdArgs 0)}}
  {{$flag = lower $flag}}
  {{if eq $cmd "-rm"}}
    {{if eq (len .CmdArgs) 1}}
  Erreur : Nombre d'argument invalide.
  > N'oublier pas le nom de l'objet !
    {{else if ge (len .CmdArgs) 2}}
      {{$item = title (index .CmdArgs 1)}}
      {{if eq (len .CmdArgs) 3}}
        {{$q = toInt (index .CmdArgs 2)}}
      {{end}}

      {{if eq $flag "-arme" "-armes"}}
        {{$type := lower (reFind `(?i)(poigne|épée|masse||pistolet|fusil|canon|\[A\]|\[CHARGEUR\])` .Message.Content)}}
        {{if or (not $type) (eq $type "[chargeur]")}}
          Erreur : Oublie du type d'arme
        {{else}}
          {{if gt $q ($armes.Get $item)}}
            Erreur quantité
          {{else}}
            {{$armes.Set $item (sub ($armes.Get $item) $q)}}
            {{if le ($armes.Get $item) 0}}
              {{$armes.Del $item}}
            {{end}}
            {{$log = (joinStr " " "Suppression de" $q $item "de l'inventaire du Nucleus")}}
            {{sendMessage nil $log}}
            {{dbSet 0 "armelist" $armes}}
          {{end}}
        {{end}}
      
      {{else if eq $flag "-soin" "-soins"}}
        {{if gt $q ($soin.Get $item)}}
          Erreur quantité
        {{else}}
          {{$soin.Set $item (sub ($soin.Get $item) $q)}}
          {{if le ($soin.Get $item) 0 }}
            {{$soin.Del $item}}
          {{end}}
          {{$log = (joinStr " " "Suppression de" $q $item "de l'inventaire du Nucleus")}}
          {{sendMessage nil $log}}
          {{dbSet 0 "soin" $soin}}
        {{end}}
      
      {{else if eq $flag "-module" "-modules"}}
        {{$type := title (lower (reFind `(?i)(Perforant|burst|soutien|altération|schéma|passif)` .Message.Content))}}
        {{if not $type}}
          Erreur : Vous devez indiquer le type de modules.
        {{else}}  
          {{if gt $q ($module.Get $item)}}
            Erreur quantité
          {{else}}
            {{$item = print "[MODULE] " $type}}
            {{$module.Set $item (sub ($module.Get $item) $q)}}
            {{if le ($module.Get $item) 0}}
              {{$module.Del $item}}
            {{end}}
            {{dbSet .Server.ID "module" $module}}
            {{$log = (joinStr " " "Suppression de" $q $item "de l'inventaire du Nucleus")}}
            {{sendMessage nil $log}}
          {{end}}
        {{end}}

      {{else if eq $flag "-chargeur"}}
        {{$balle := reFind `(?i)(fusil|pistolet|canon)` .Message.Content}}
        {{if not $balle}}
          Erreur : VOus devez indiquer l'arme liée au chargeur.
        {{else}}
          {{if gt $q ($chargeur.Get $item)}}
            Erreur de quantité.
          {{else}}
            {{$item = print "[CHARGEUR] " (title $balle)}}
            {{$chargeur.Set $item (sub ($chargeur.Get $item) $q)}}
            {{if le ($chargeur.Get $item) 0}}
              {{$chargeur.Del $item}}
            {{end}}
            {{dbSet 0 "chargeur_Multi" $chargeur}}
            {{$log = (joinStr " " "Suppression de" $q $item "de l'inventaire du Nucleus")}}
            {{sendMessage nil $log}}
          {{end}}
        {{end}}

      {{else if eq $flag "-implant" "-implants"}}
        {{$type := title (lower (reFind `(?i)(force|résistance|cognition|furtivité|vision)` .Message.Content))}}
        {{if not $type}}
        Erreur : Vous devez indiquer le type d'implants.
        {{else}}
          {{if gt $q ($implant.Get $item)}}
            Erreur de quantité
          {{else}}
            {{$item = print "[IMPLANT] " $type}}
            {{$implant.Set $item (sub ($implant.Get $item) $q)}}
            {{if le 0 ($implant.Get $item)}}
              {{$implant.Del $item}}
            {{end}}
            {{dbSet .Server.ID "implant" $implant}}
            {{$log = (joinStr " " "Suppression de" $q $item "de l'inventaire du Nucleus")}}
            {{sendMessage nil $log}}
          {{end}}
        {{end}}

      {{else if eq $flag "-bc"}}
        {{$x := (toInt (index .CmdArgs 1))}}
        {{$value := $compo.Get "biocomposant"}}
        {{if gt $x $value}}
          Erreur de quantité
        {{else}}
          {{$bc := sub $value $x}}
          {{if le $bc 0}}
            {{$compo.Del "biocomposant"}}
          {{else}}
            {{$compo.Set "biocomposant" $bc}}
          {{end}}
          {{$log = (joinStr " " "Suppression de" $x "Biocomposant de l'inventaire du Nucleus")}}
          {{sendMessage nil $log}}
          {{dbSet .Server.ID "compo" $compo}}
        {{end}}


      {{else if eq $flag "-lc"}}
        {{$x := (toInt (index .CmdArgs 1))}}
        {{$value := $compo.Get "cytomorphe"}}
        {{if gt $x $value}}
          Erreur de quantité
        {{else}}
          {{$lc := sub $value $x}}
          {{if le $lc 0}}
            {{$compo.Del "cytomorphe"}}
          {{else}}
            {{$compo.Set "cytomorphe" $lc}}
          {{end}}
          {{$log = (joinStr " " "Suppression de" $x "liquides cytomorphes de l'inventaire du Nucleus")}}
          {{dbSet .Server.ID "compo" $compo}}
          {{sendMessage nil $log}}
        {{end}}

      {{else if eq $flag "-cb"}}
        {{$value := $compo.Get "bionotropique"}}
        {{$x := (toInt (index .CmdArgs 1))}}
        {{if gt $x $value}}
          Erreur de quantité
        {{else}}
          {{$cb := sub $value $x}}
          {{if le $cb 0}}
            {{$compo.Del "bionotropique"}}
          {{else}}
            {{$compo.Set "bionotropique" $cb}}
          {{end}}
          {{dbSet .Server.ID "compo" $compo}}
          {{$log = (joinStr " " "Suppression de" $x "cellule bionotropique de l'inventaire du Nucleus")}}
          {{sendMessage nil $log}}
        {{end}}

      {{else if eq $flag "-sf"}}
        {{$value := $compo.Get "ferreux"}}
        {{$x := (toInt (index .CmdArgs 1))}}
        {{if gt $x $value}}
          Erreur de quantité
        {{else}}
          {{$sf := sub $value $x}}
          {{if le $sf 0}}
            {{$compo.Del "ferreux"}}
          {{else}}
            {{$compo.Set "ferreux" $sf}}
          {{end}}
          {{dbSet .Server.ID "compo" $compo}}
          {{$log = (joinStr " " "Suppression de" $x "substrats ferreux de l'inventaire du Nucleus")}}
          {{sendMessage nil $log}}
        {{end}}

      {{else if eq $flag "-cu"}}
        {{$value := $compo.Get "universel"}}
        {{$x := (toInt (index .CmdArgs 1))}}
        {{if gt $x $value}}
          Erreur de quantité
        {{else}}
          {{$cu := sub $value $x}}
          {{if le $cu 0}}
            {{$compo.Del "universel"}}
          {{else}}
            {{$compo.Set "universel" $cu}}
          {{end}}
          {{dbSet .Server.ID "compo" $compo}}
          {{$log = (joinStr " " "Suppression de" $x "composants universels de l'inventaire du Nucleus")}}
          {{sendMessage nil $log}}
        {{end}}
      {{end}}
		{{else if eq $cmd "-reset"}}
      {{$flag2 := reFind `\-(?i)(armes?|modules?|implants?|soins?|chargeur|compo)` (index .CmdArgs 1)}}
      {{$flag2 = lower $flag}}
    	{{if eq $flag2 "-arme" "-armes"}}
        {{dbDel 0 "armelist"}}
      {{else if eq $flag2 "-compo"}}
        {{dbDel .Server.ID "compo"}}
      {{else if eq $flag2 "-soin" "-soins"}}
        {{dbDel 0 "soin"}}
      {{else if eq $flag2 "-module" "-modules"}}
        {{dbDel .Server.ID "module"}}
      {{else if eq $flag2 "-chargeur" "-chargeurs"}}
        {{dbDel 0 "chargeur_Multi"}}
      {{else if eq $flag2 "-implants" "-implant"}}
        {{dbDel .Server.ID "implant"}}
      {{end}}
    {{end}}
  {{end}}
{{else}}
	**Usage** : `$adminVN -rm -(armes?|soin(s?)|implant(s?)|modules?|BC|LC|CB|SF|CU|bc|lc|cb|sf|cu|chargeur) <valeur> (quantité si non-composant)`
{{end}}