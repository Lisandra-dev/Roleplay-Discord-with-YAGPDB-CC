{{/* Trigger : Regex : `^\$manageinv -remove`*/}}
{{$msg := ""}}
{{$name := or (reFind `(\>\S*)` .Message.Content) (reFind `<(.*)<` .Message.Content)}}{{$name = joinStr "" (split $name ">")}}{{$name = joinStr "" (split $name "<")}}

{{$user := .Member.Nick}}
{{$id := .User.ID }}
{{if $name}}
	{{$user = title $name}}
  {{$rr := sdict}}
	{{with (dbGet 0 "reroll_List")}}
		{{$rr = sdict .Value}}
	{{end}}
	{{$id = (toInt ($rr.Get $user))}}
	{{$idperso := (toRune (lower $name))}}
	{{range $idperso}}
		{{- $id = add $id . }}
	{{- end}}
{{else if eq (len $user) 0}}
	{{$user = .User.Username}}
{{end}}
{{$mention := ""}}

{{if .CmdArgs}}
  {{$target := ""}}
  {{$item := ""}}
  {{$amount := 1}}
  {{$item := ""}}
  {{if $name}}
    {{$target = $id}}
    {{$user = $name}}
    {{$mention = $name}}
  {{else}}
    {{with (userArg (index .CmdArgs 0))}}
      {{$target = .}}
      {{$target = $target.ID}}
      {{$user = (getMember $target).Nick}}
      {{if eq (len $user) 0}}
        {{$user = .}}
        {{$user = $user.Username}}
      {{end}}
      {{$mention = $user}}
    {{end}}
  {{end}}
    {{$item = title (index .CmdArgs 1)}}
    {{$amount := 1}}
    {{if gt (len .CmdArgs) 2 }}
      {{if not (userArg (index .CmdArgs 1))}}
        {{$amount = or (toInt (index .CmdArgs 2)) 1}}
      {{else}}
        {{$item = title (index .CmdArgs 2)}}
      {{end}}
      {{if ge (len .CmdArgs) 4}}
        {{$amount = or (toInt (index .CmdArgs 3)) 1}}
      {{end}}
    {{end}}
  {{$equip := sdict}}
  {{$place := sdict}}
	{{if $target}}
    {{with (dbGet $target "équipement")}}
      {{$equip = sdict .Value}}
    {{end}}
    {{with (dbGet $target "place")}}
      {{$place = sdict .Value}}
    {{end}}
    {{$sstuff := $place.Get "s_stuff"}}
    {{$sconso := $place.Get "s_conso"}}
    {{$mstuff := $place.Get "max_stuff"}}
    {{$mconso := $place.Get "max_conso"}}
    {{$compo := reFind `(?i)(bc|lc|cb|sf|cu)` $item}}
    {{$chargeur := reFind `(?i)chargeur` $item}}
    {{$conso := false}}
    {{if $chargeur}}
      {{$item = reFind `(?i)(fusil|pistolet|canon)` $item}}
      {{$item = print "[CHARGEUR] " $item}}
      {{$conso = true}}
    {{end}}
    {{if $compo}}
      {{if eq $compo "bc" "BC" "Bc"}}
        {{$item = "[C] Biocomposant"}}
      {{else if eq $compo "lc" "LC" "Lc"}}
        {{$item = "[C] Liquide Cytomorphe"}}
      {{else if eq $compo "cb" "CB" "Cb"}}
        {{$item = "[C] Cellule Bionotropique"}}
      {{else if eq $compo "sf" "SF" "Sf"}}
        {{$item = "[C] Substrat Ferreux"}}
      {{else if eq $compo "cu" "CU" "Cu"}}
        {{$item = "[C] Composant Universel"}}
      {{end}}
    {{end}}
    {{$sac := (reFind `(?i)(Sacoche$|Sac à dos|(Sacoche ceinture))` $item)}}
    {{if $sac}}
      {{$item = print "[E] " (title (lower $sac))}}
    {{end}}
    {{$mimp := (reFind `(?i)(perforant|burst|soutien|altération|schéma|passif|force|résistance|cognition|furtivité|vision|vitalité|guérison)` $item)}}
    {{if eq $mimp "perforant" "burst" "soutien" "altération" "schéma" "passif"}}
      {{$item = print "[MODULE] " $mimp}}
    {{else if eq $mimp "force" "résistance" "cognition" "furtivité" "vision" "vitalité" "guérison"}}
      {{$item = print "[IMPLANT] " $mimp}}
    {{end}}
    {{$arme := lower (reFind `(?i)(poigne|épée|masse|pistolet|fusil|canon|couteau|^\[A\]|^\[CHARGEUR\])` $item)}}
    {{if and (eq $arme "poigne" "épée" "masse" "pistolet" "fusil" "canon" "couteau") (ne $arme "[a]") (ne $arme "[chargeur]")}}
      {{$item = print "[A] " $item}}
    {{end}}

    {{if and ($equip.Get $item) (le (toInt $amount) (toInt ($equip.Get $item)))}}
      {{if and (or $arme (reFind `^\[E\]` $item)) (ne $conso true)}}
        {{if not $sac}}
          {{if lt $amount $mstuff}}
            {{$place.Set "s_stuff" (add $sstuff $amount)}}
            {{$equip.Set $item (sub (toInt ($equip.Get $item)) $amount)}}
          {{else if eq $amount $mstuff}}
            {{$place.Set "s_stuff" $mstuff}}
          {{end}}
          {{$msg = joinStr "" $amount " " $item " ont été retiré de l'inventaire de " $mention}}
        {{else if $sac}}
          {{if eq $item "[E] Sac À Dos" }}
            {{$sstuff = sub $sstuff 3}}
            {{$sconso = sub $sconso 9}}
            {{if or (le $sstuff 0) (le $sconso 0)}}
             {{ $msg = joinStr "" "Le " $item " de " $mention "est rempli ! Videz le avant de le ranger."}}
            {{else}}
              {{$place.Set "s_stuff" $sstuff}}
              {{$place.Set "s_conso" $sconso}}
              {{$place.Set "max_stuff" 2}}
              {{$place.Set "max_conso" 5}}
              {{$equip.Del $item}}
              {{$msg = joinStr "" $amount " " $item " ont été retiré de l'inventaire de " $mention "." }}
            {{end}}
          {{else if eq $item "[E] Sacoche" }}
            {{$sstuff = sub $sstuff 2}}
            {{$sconso = sub $sconso 6}}
            {{if or (le $sstuff 0) (le $sconso 0)}}
             {{ $msg = joinStr "" "Le " $item " de " $mention "est rempli ! Videz le avant de le ranger."}}
            {{else}}
              {{$place.Set "s_stuff" $sstuff}}
              {{$place.Set "s_conso" $sconso}}
              {{$place.Set "max_stuff" 2}}
              {{$place.Set "max_conso" 5}}
              {{$equip.Del $item}}
              {{$msg = joinStr "" $amount " " $item " ont été retiré de l'inventaire de " $mention "." }}  
            {{end}}
          {{else if eq $item "[E] Sacoche Ceinture"}}
            {{$sstuff = sub $sstuff 1}}
            {{$sconso = sub $sconso 3}}
            {{if or (lt $sstuff 0) (lt $sconso 0)}}
             {{ $msg = joinStr "" "Le " $item " de " $mention "est rempli ! Videz le avant de le ranger."}}
            {{else}}
              {{$place.Set "s_stuff" $sstuff}}
              {{$place.Set "s_conso" $sconso}}
              {{$place.Set "max_stuff" 2}}
              {{$place.Set "max_conso" 5}}
              {{$equip.Del $item}}
              {{$msg = joinStr "" $amount " " $item " ont été retiré de l'inventaire de " $mention "." }}  
            {{end}}
          {{end}}
        {{end}}   
      {{else if or (eq $compo true) (and (not $compo) (not (reFind `\[X\]` $item)))}}
        {{if lt $amount (toInt $mconso)}}
          {{$place.Set "s_conso" (add $amount $sconso)}}
          {{$equip.Set $item (sub (toInt ($equip.Get $item)) $amount)}}
        {{else if eq $amount (toInt $mconso)}}
          {{$place.Set "s_conso" $mconso}}
          {{$equip.Set $item (sub (toInt ($equip.Get $item)) $amount)}}
          {{$msg = joinStr "" $amount " " $item " ont été retiré de l'inventaire de " $mention "." }}        
        {{end}}
      {{else if or $compo (reFind `\[X\]` $item)}}
        {{$equip.Set $item (sub (toInt ($equip.Get $item)) $amount)}}
        {{$msg = joinStr "" $amount " " $item " ont été retiré de l'inventaire de " $mention "." }}        
      {{end}}
      {{if le (toInt ($equip.Get $item)) 0}}
        {{$equip.Del $item}}
      {{end}}
     {{$msg = joinStr "" $msg "\n" $mention " : il vous reste " ($place.Get "s_stuff") " places d'équipements et " ($place.Get "s_conso") " places de consommables. "}} 
      {{dbSet $target "équipement" $equip }}
      {{dbSet $target "place" $place}}
    {{else}}
      {{$msg = joinStr "" $mention " : L'objet n'existe pas dans l'équipement ou il n'y a en a pas assez." }}
    {{end}}
  {{end}}
{{else}}
  **Usage** : `$manageinv -(init|reset|add|rm) @/>cible item amount`
  > Si reset / init : juste indiquer l'utilisateur
{{end}}
{{sendMessage nil $msg}}
{{deleteTrigger 1}}
