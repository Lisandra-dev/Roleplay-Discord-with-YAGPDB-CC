
{{/* To adapt, change the text for the composant.
	Name used in :
	-> Inventory dict : [C] items
	-> Compo dict : diminutif without majuscule
	-> recipe : Complete name with majuscule
	- You can change the option with changing the ReFind. */}}

{{$recipe := sdict}}
{{with (dbGet 0 "recipe")}}
	{{$recipe = sdict .Value}}
{{end}}

{{$c1 := 0}}
{{$c2 := 0}}
{{$c3 := 0}}
{{$c4 := 0}}
{{$cu := 0}}
{{$item := ""}}

{{if .CmdArgs}}
	{{$item := title (index .CmdArgs 0)}}
	{{if (reFind "-bdg" .Message.Content)}}
		{{$item = print "[BDG] " $item}}
	{{end}}
	{{$balle := reFind `(?i)chargeur` .Message.Content}}

	{{if ($recipe.Get $item)}}
		{{$i := sdict ($recipe.Get $item)}}
		{{$c1 = $i.Get "Compo1"}}
		{{$c2 = $i.Get "Compo2"}}
		{{$c3 = $i.Get "Compo3"}}
		{{$c4 = $i.Get "Compo4"}}
		{{$cu = $i.Get "Composant universel"}}
		{{$compo := reFind `-(c1|c2|c3|c4|cu)` .Message.Content}}
		{{if not $compo}}
			Erreur : Composant non reconnu
		{{else}}
			{{if eq $compo "-c1"}}
				{{$c1 = (index .CmdArgs 2)}}
			{{else if eq $compo "-c2"}}
				{{$c2 = (index .CmdArgs 2)}}
			{{else if eq $compo "-c3"}}
				{{$c3 = (index .CmdArgs 2)}}
			{{else if eq $compo "-c4"}}
				{{$c4 = (index .CmdArgs 2)}}
			{{else if eq $compo "-cu"}}
				{{$cu = (index .CmdArgs 2)}}
			{{end}}
			{{$recipe.Set $item (sdict "Compo1" $c1 "Compo2" $c2 "Compo3" $c3 "Compo4" $c4 "Composant universel" $cu)}}
			{{with ($recipe.Get $item)}}
				{{print .}}
			{{end}}
		{{end}}
	{{else}}
		Objet non reconnu.
	{{end}}
{{else}}
Pas d'arguments
{{end}}
{{dbSet 0 "recipe" $recipe}}
{{deleteTrigger 1}}
