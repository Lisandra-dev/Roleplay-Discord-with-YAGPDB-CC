
{{/* Dictionnaire d'Item */}}
	{{/* Recette */}}
{{$recipe := sdict}}
{{with (dbGet 0 "recipe")}}
	{{$recipe = sdict .Value}}
{{end}}

	{{/* Inventaire du Nucleus */}}

{{$compo := sdict}}
{{with (dbGet .Server.ID "compo")}}
	{{$compo = sdict .Value}}
{{end}}

{{/* Personnage */}}

{{$name := reFind `(\#\S*)` .Message.Content}}
{{$name = joinStr "" (split $name "#")}}
{{$user := .Member.Nick}}
{{$id := .User.ID }}
{{if $name}}
	{{$user = $name}}
	{{$idperso := (toRune (lower $name))}}
	{{range $idperso}}
		{{- $id = add $id . }}
	{{- end}}
{{else if eq (len $user) 0}}
	{{$user = .User.Username}}
{{end}}
{{$user = title $user}}

{{$userEco := sdict}}
{{with (dbGet $id "economy")}}
	{{$userEco = sdict .Value}}
{{end}}

{{/* Inventory */}}
{{$inv := sdict}}
{{if ($userEco.Get "Inventory")}}
	{{$inv = sdict ($userEco.Get "Inventory")}}
{{end}}

{{/* Flag */}}
{{$choice := reFind `(?i)(\+VN)` .Message.Content }}
{{$choice = upper $choice}}
{{$quanti := reFind `q\d+` .Message.Content}}
{{$u := reFind `-cu` .Message.Content}}
{{$bdg := reFind `-bdg` .Message.Content}}
{{$balle := reFind `(?i)(chargeur|module|implant|poigne|épée|masse|projectile|grenade|pistolet|fusil|canon)` .Message.Content}}
{{$arme := reFind `(?i)(poigne|épée|masse|projectile|grenade|pistolet|fusil|canon)` .Message.Content}}

{{/* Variable */}}

{{$q := 1}}
{{if $quanti}}
	{{$q = joinStr "" (split $quanti "q")}}
	{{$q = toInt $q}}
{{end}}

{{$log := ""}}

{{$bcp := 0}}
{{$sfp := 0}}
{{$cbp := 0}}
{{$cup := 0}}
{{$lcp := 0}}
{{$bcv := 0}}
{{$sfv := 0}}
{{$cbv := 0}}
{{$cuv := 0}}
{{$lcv := 0}}

{{if ($inv.Get "[C] Biocomposant")}}
	{{$bcp = $inv.Get "[C] Biocomposant"}}
{{end}}
{{if ($inv.Get "[C] Substrat Ferreux")}}
	{{$sfp =  $inv.Get "[C] Substrat Ferreux"}}
{{end}}
{{if ($inv.Get "[C] Liquide Cytomorphe")}}
	{{$lcp = $inv.Get "[C] Liquide Cytomorphe"}}
{{end}}
{{if ($inv.Get "[C] Cellule Bionotropique")}}
	{{$cbp = $inv.Get "[C] Cellule Bionotropique"}}
{{end}}
{{if ($inv.Get "[C] Composant Universel")}}
	{{$cup = $inv.Get "[C] Composant Universel"}}
{{end}}

{{if ($compo.Get "biocomposant")}}
	{{$bcv = $compo.Get "biocomposant"}}
{{end}}
{{if ($compo.Get "cytomorphe")}}
	{{$lcv = $compo.Get "cytomorphe"}}
{{end}}
{{if ($compo.Get "ferreux")}}
	{{$sfv = $compo.Get "ferreux"}}
{{end}}
{{if ($compo.Get "bionotropique")}}
	{{$cbv = $compo.Get "bionotropique"}}
{{end}}
{{if ($compo.Get "universel")}}
	{{$cuv = $compo.Get "universel"}}
{{end}}
{{if (dbGet 0 "mission")}}
	Vous n'êtes pas sur le Nucleus, vous ne pouvez donc pas fabriquer d'objet pour le moment.
{{else}}
  {{if .CmdArgs}}
    {{$item := title (index .CmdArgs 0)}}
    {{$reci := $item}}
  {{if eq $balle "chargeur" "CHARGEUR" "Chargeur"}}
      {{$weap := reFind `(?i)(fusil|pistolet|canon)` $item}}
      {{$reci = print "[CHARGEUR] " (title $weap)}}
      {{$item = $reci}}
    {{else if eq $balle "module" "Module" "MODULE"}}
      {{$type := reFind `(?i)(Perforant|burst|soutien|altération|schéma|passif)` $item}}
      {{$item = print "[MODULE] " (title (lower $type))}}
      {{$reci = title (lower $type)}}
    {{else if eq $balle "implant" "Implant" "IMPLANT"}}
      {{$type := reFind `(?i)(force|résistance|cognition|furtivité|vision)` $item}}
      {{$reci = title (lower $type)}}
      {{$item = print "[IMPLANT] " (title (lower $type))}}
    {{else if and $balle $arme (eq $balle $arme)}}
      {{$reci = title (lower $arme)}}
    {{end}}

    {{if $bdg}}
      {{$reci = print "[BDG] " $reci}}
      {{$item = print "[BDG] " $item}}
    {{end}}

    {{if ($recipe.Get $reci)}}
      {{$i := sdict ($recipe.Get $reci)}}
      {{$bc := mult ($i.Get "Biocomposant") $q}}
      {{$sf := mult ($i.Get "Substrat Ferreux") $q}}
      {{$lc := mult ($i.Get "Liquide Cytomorphe") $q}}
      {{$cb := mult ($i.Get "Cellule Bionotropique") $q}}

      {{if and $choice (not $u)}}
        {{$bct := sub $bcp $bc}}
        {{$sft := sub $sfp $sf}}
        {{$cbt := sub $cbp $cb }}
        {{$lct := sub $lcp $lc }}
        {{if and (ge $bcv $bct) (ge $sfv $sft) (ge $cbv $cbt) (ge $lcv $lct)}}
          {{if or (lt $bcp $bc) (lt $sfp $sf) (lt $cbp $cb) (lt $lcp $lc)}}
            {{$inv.Set $item (add ($inv.Get $item) $q)}}
            {{if gt $bc 0}}
              {{$inv.Del "[C] Biocomposant"}}
            {{end}}
            {{if gt $sf 0}}
              {{$inv.Del "[C] Substrat Ferreux"}}
            {{end}}
            {{if gt $lc 0}}
              {{$inv.Del "[C] Liquide Cytomorphe"}}
            {{end}}
            {{if gt $cb 0}}
              {{$inv.Del "[C] Cellule Bionotropique"}}
            {{end}}
            {{$bcv = sub $bcv $bc}}
            {{$sfv = sub $sfv $sf}}
            {{$cbv = sub $cbv $cb}}
            {{$lcv = sub $lcv $lc}}
            {{if le $bcv 0}}
              {{$compo.Del "biocomposant"}}
            {{else}}
              {{$compo.Set "biocomposant" $bcv}}
            {{end}}
            {{if le $sfv 0}}
              {{$compo.Del "ferreux"}}
            {{else}}
              {{$compo.Set "ferreux" $sfv}}
            {{end}}
            {{if le $cbv 0}}
              {{$compo.Del "bionotropique"}}
            {{else}}
              {{$compo.Set "bionotropique" $cbv}}
            {{end}}
            {{if le $lcv 0}}
              {{$compo.Del "cytomorphe"}}
            {{else}}
              {{$compo.Set "cytomorphe" $lcv}}
            {{end}}
            {{$log = joinStr " " $user "a fabriqué" $q $item "en utilisant son inventaire et celui du Nucleus. \n\n " $user " a utilisé : \n ▫️ Biocomposant :" $bc "[" $bcv "] \n ▫️ Substrat Ferreux :" $sf "[" $sfv "] \n ▫️ Liquide Cytomorphe" $lc "[" $lcv "] \n ▫️ Cellule Bionotropique" $cb "[" $cbv "]"}}
            {{sendMessage nil $log}}
          {{else}}
            {{$msg := joinStr " " $user "a fabriqué" $q $item "en utilisant :\n ▫️ Biocomposant :" $bc "[" $bcp "] \n ▫️ Substrat Ferreux :" $sf "[" $sfp "] \n ▫️ Liquide Cytomorphe" $lc "[" $lcp "] \n ▫️ Cellule Bionotropique" $cb "[" $cbp "]" }}
            {{sendMessage nil $msg}}
            {{if ($inv.Get $item)}}
              {{$inv.Set $item (add ($inv.Get $item) $q)}}
            {{else}}
              {{$inv.Set $item $q}}
            {{end}}
            {{$bcp = sub $bcp $bc}}
            {{if le $bcp 0}}
              {{$inv.Del "[C] Biocomposant"}}
            {{else}}
              {{$inv.Set "[C] Biocomposant" $bcp}}
            {{end}}
            {{$cbp = sub $cbp $cb}}
            {{if le $cbp 0}}
              {{$inv.Del "[C] Cellule Bionotropique"}}
            {{else}}
              {{$inv.Set "[C] Cellule Bionotropique" $cbp}}
            {{end}}
            {{$sfp = sub $sfp $sf}}
            {{if le $sfp 0}}
              {{$inv.Del "[C] Substrat Ferreux"}}
            {{else}}
              {{$inv.Set "[C] Substrat Ferreux" $sfp}}
            {{end}}
            {{$lcp = sub $lcp $lc}}
            {{if le $lcp 0}}
              {{$inv.Del "[C] Liquide Cytomorphe"}}
            {{else}}
              {{$inv.Set "[C] Liquide Cytomorphe" $lcp}}
            {{end}}
          {{end}}
        {{else}}
          {{$msg = joinStr "" "Le vaisseau et " $user "n'ont pas les composants nécessaires pour faire" $item}}
          {{sendMessage nil $msg}}
        {{end}}
      {{else if and $choice $u }}
        {{$cut := $q}}
        {{if ge $cuv $q}}
          {{if (lt $cup $q)}}
            {{$inv.Set $item (add ($inv.Get $item) $q)}}
            {{$inv.Del "[C] Composant Universel"}}
            {{$cuv = sub $cuv $q}}
            {{if le $cuv 0}}
              {{$compo.Del "universel"}}
            {{else}}
              {{$compo.Set "universel" $cuv}}
            {{end}}
            {{$log = joinStr " " $user "a fabriqué" $q $item "en utilisant" $q "composants universels du vaisseau. \n Il reste" ($compo.Get "universel") "sur le vaisseau." }}
          {{else}}
            {{if ($inv.Get $item)}}
              {{$inv.Set $item (add ($inv.Get $item) $q)}}
            {{else}}
              {{$inv.Set $item $q}}
            {{end}}
            {{$inv.Set "[C] Composant Universell" (sub $cup $q)}}
            {{if le ($inv.Get "[C] Composant Universel") 0}}
              {{$inv.Del "[C] Composant Universel"}}
            {{end}}
            {{$msg = joinStr "" $user " a fabriqué " $q " " $item " en utilisant " $q " Composant Universel. Il reste " (sub $cup (mult $cup $q)) "dans son inventaire."}}
            {{sendMessage nil $msg}}
          {{end}}
        {{else}}
          {{$msg = joinStr "" "Le Nucleus n'a pas assez de composants universels pour fabriquer" $q $item "."}}
          {{sendMessage nil $msg}}
        {{end}}
      {{end}}
    {{else}}
    {{$msg = "L'objet ne possède pas de recette."}}
    {{sendMessage nil $msg}}
    {{end}}
  {{else}}
    **Usage** : `$craft "objet" (q[1-100]) (+VN|-case) (-bdg) (-cu) (#reroll)`
  {{end}}
{{end}}

{{$userEco.Set "Inventory" $inv}}
{{dbSet $id "economy" $userEco}}
{{dbSet .Server.ID "compo" $compo}}
{{$chan := 735938256038002818}}
{{sendMessage $chan $log}}
{{deleteTrigger 1}}
