{{/* Dictionnaire d'Item */}}
	{{/* Recette */}}
{{$recipe := sdict}}
{{with (dbGet 0 "recipe")}}
	{{$recipe = sdict .Value}}
{{end}}

	{{/* Inventaire du Nucleus */}}

{{$compo := sdict}}
{{with (dbGet .Server.ID "compo")}}
	{{$compo = sdict .Value}}
{{end}}


{{/* Personnage */}}

{{$name := reFind `(\>\S*)` .Message.Content}}
{{$name = joinStr "" (split $name ">")}}

{{$user := .Member.Nick}}
{{$id := .User.ID }}
{{if $name}}
	{{$user = title $name}}
	{{$idperso := (toRune (lower $name))}}
	{{range $idperso}}
		{{- $id = add $id . }}
	{{- end}}
{{else if eq (len $user) 0}}
	{{$user = .User.Username}}
{{end}}{{$hpS := sdict }}{{with (dbGet 0 "HP")}}{{$hpS = sdict .Value}}{{end}}{{with ($hpS.Get (str $id))}}{{$user = .Personnage}}{{end}}

{{$userEco := sdict}}
{{with (dbGet $id "economy")}}
	{{$userEco = sdict .Value}}
{{end}}

{{/* Inventory */}}
{{$inv := sdict}}
{{if ($userEco.Get "Inventory")}}
	{{$inv = sdict ($userEco.Get "Inventory")}}
{{end}}

{{/* Flag */}}
{{$choice := reFind `(\+VN)` .Message.Content }}
{{$quanti := reFind `q\d+` .Message.Content}}
{{$bdg := reFind `[BDG]` .Message.Content}}
{{$balle := reFind `(?i)(chargeur|module|implant|poigne|épée|masse|projectile|grenade|pistolet|fusil|canon)` .Message.Content}}
{{$balle = lower $balle}}

{{/* Variable */}}
{{$q := 1}}
{{if $quanti}}
	{{$q = joinStr "" (split $quanti "q")}}
	{{$q = toInt $q}}
{{end}}

{{$log := ""}}
{{if (dbGet 0 "mission")}}
	Vous n'êtes pas sur le Nucleus, vous ne pouvez donc pas recycler d'objet pour le moment.
{{else}}
	{{if .CmdArgs}}
		{{$item := title (index .CmdArgs 0)}}
		{{$reci := $item}}

		{{if eq $balle "chargeur"}}
			{{$weap := reFind `(?i)(fusil|pistolet|canon)` $item}}
			{{$item = print "[CHARGEUR] " (title $weap)}}
			{{$reci = $item}}
		{{else if eq $balle "module"}}
			{{$type := reFind `(?i)(Perforant|burst|soutien|altération|schéma|passif)` $item}}
			{{$item = print "[MODULE] " (title (lower $type))}}
			{{$reci = title (lower $type)}}
		{{else if eq $balle "implant"}}
			{{$type := reFind `(?i)(force|résistance|cognition|furtivité|vision)` $item}}
			{{$reci = title (lower $type)}}
			{{$item = print "[IMPLANT] " (title (lower $type))}}
		{{else if eq $balle "poigne" "épée" "masse" "projectile" "grenade" "pistolet" "fusil" "canon"}}
			{{$type := reFind `(?i)(poigne|épée|masse|projectile|grenade|pistolet|fusil|canon)` .Message.Content}}
			{{$reci = title (lower $type)}}
		{{end}}

		{{if $bdg}}
			{{$reci = print "[BDG] " (joinStr "" (split $reci "[BDG]"))}}
		{{end}}
		{{if $recipe.Get $reci}}
			{{$i := sdict ($recipe.Get $reci)}}
			{{$bc := mult ($i.Get "Biocomposant") $q}}
			{{if gt $bc 1}}
				{{$bc = randInt 1 $bc}}
			{{end}}
			{{$sf := mult ($i.Get "Substrat Ferreux") $q}}
			{{if gt $sf 1}}
				{{$sf = randInt 1 $sf}}
			{{end}}
			{{$lc := mult ($i.Get "Liquide Cytomorphe") $q}}
			{{if gt $lc 1}}
				{{$lc = randInt 1 $lc}}
			{{end}}
			{{$cb := mult ($i.Get "Cellule Bionotropique") $q}}
			{{if gt $cb 1}}
				{{$cb = randInt 1 $cb}}
			{{end}}
			{{$cu := randInt 1 100}}
			{{if le $cu 10}}
				{{$cu = $q}}
			{{end}}


			{{if and ($inv.Get $item) (ge (toInt ($inv.Get $item)) $q)}}
				{{$inv.Set $item (sub ($inv.Get $item) $q)}}
				{{if eq ($inv.Get $item) 0}}
					{{$inv.Del $item}}
				{{end}}
				{{$inv.Set "[C] Biocomposant" $bc}}
				{{$inv.Set "[C] Substrat Ferreux" $sf }}
				{{$inv.Set "[C] Liquide Cytomorphe" $lc }}
				{{$inv.Set "[C] Cellule Bionotropique" $cb }}
				{{$inv.Set "[C] Composant Universel" $cu }}
				{{$user}} a recyclé {{$q}} {{$item}} et obtenu :
				▫️ Biocomposant : {{$bc}}
				▫️ Substrat Ferreux : {{$sf}}
				▫️ Liquide Cytomorphe : {{$lc}}
				▫️ Cellule Bionotropique : {{$cb}}
				{{if eq $cu 1}}
				▫️ Composant Universel : {{$cu}}
				{{end}}

			{{else if and ($inv.Get $item) (ge (toInt ($inv.Get $item)) $q) $choice}}
				{{$inv.Set $item (sub ($inv.Get $item) $q)}}
				{{if eq ($inv.Get $item) 0}}
					{{$inv.Del $item}}
				{{end}}
				{{$compo.Set "biocomposant" $bc}}
				{{$compo.Set "ferreux" $sf}}
				{{$compo.Set "cytomorphe" $lc}}
				{{$compo.Set "bionotropique" $cb}}
				{{$compo.Set "universel" $cu}}
				{{$log = joinStr " " $user "a recyclé" $q $item "et obtenu :\n ▫️ Biocomposant :" $bc "\n▫️ Substrat Ferreux :" $sf 2 "\n▫️ Liquide Cytomorphe :" $lc "\n▫️ Cellule Bionotropique :" $cb}}
				{{if eq $cu 1}}
					{{$log = joinStr " " $log "\n ▫️ Composant Universel :" $cu }}
				{{end}}
			{{else}}
				{{$user}} ne possède pas {{$item}} en quantité suffisante (Minimum : {{$q}}) pour faire le recyclage.
			{{end}}
		{{else}}
			`{{$item}}` n'a pas recette attitré.
		{{end}}
	{{else}}
		**Usage** : `$recycle "objet" (q[1-100]) (+VN) (-bdg)`
	{{end}}

	{{if eq (toInt ($inv.Get "[C] Biocomposant")) 0}}
		{{$inv.Del "[C] Biocomposant"}}
	{{end}}
	{{if eq (toInt ($inv.Get "[C] Substrat Ferreux")) 0}}
		{{$inv.Del "[C] Substrat Ferreux"}}
	{{end}}
	{{if eq (toInt ($inv.Get "[C] Liquide Cytomorphe")) 0}}
		{{$inv.Del "[C] Liquide Cytomorphe"}}
	{{end}}
	{{if eq (toInt ($inv.Get "[C] Cellule Bionotropique")) 0}}
		{{$inv.Del "[C] Cellule Bionotropique"}}
	{{end}}

	{{if eq (toInt ($inv.Get "[C] Composant Universel")) 0}}
		{{$inv.Del "[C] Composant Universel"}}
	{{end}}
{{end}}
{{dbSet 0 "compo" $compo}}
{{$userEco.Set "Inventory" $inv}}
{{dbSet $id "economy" $userEco}}
{{deleteTrigger 1}}
