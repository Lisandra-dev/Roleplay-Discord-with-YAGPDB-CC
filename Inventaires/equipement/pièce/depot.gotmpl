{{$name := reFind `(\>\S*)` .Message.Content}}
{{$name = reReplace `>` $name ""}}
{{$user := .Member.Nick}}
{{$id := .User.ID }}
{{$log := 735938256038002818}}
{{$reste := ""}}
{{if $name}}
	{{$user = title $name}}
	{{$idperso := (toRune (lower $name))}}
	{{range $idperso}}
		{{- $id = add $id . }}
	{{- end}}
{{else if eq (len $user) 0}}
	{{$user = .User.Username}}
{{end}}{{$hpS := sdict }}{{with (dbGet 0 "HP")}}{{$hpS = sdict .Value}}{{end}}{{with ($hpS.Get (str $id))}}{{$user = .Personnage}}{{end}}
{{$sid := sdict "[E] Sac À Dos" (sdict "ps" 5 "pc" 14 "as" 3 "ac" 9) "[E] Sacoche" (sdict "ps" 4 "pc" 11 "as" 2 "ac" 6) "[E] Sacoche Ceinture" (sdict "ps" 3 "pc" 8 "as" 1 "ac" 3)}}

{{$msg := ""}}
{{$nb := " un "}}

{{$equip := sdict}}
{{with (dbGet $id "équipement")}}
  {{$equip = sdict .Value}}
{{end}}
{{$place := sdict}}
{{with (dbGet $id "place")}}
  {{$place = sdict .Value}}
{{end}}

{{$depot := sdict}}
{{with (dbGet 0 "depot_sol")}}
  {{$depot = sdict .Value}}
{{end}}
{{$chan := str .Channel.ID}}


{{$sstuff := $place.Get "s_stuff"}}
{{$sconso := $place.Get "s_conso"}}
{{$mstuff := $place.Get "max_stuff"}}
{{$mconso := $place.Get "max_conso"}}

{{if .CmdArgs}}
  {{$item := title (lower (index .CmdArgs 0))}}
  {{$amount := 1}}
  {{if gt (len .CmdArgs) 1 }}
    {{$amount = (toInt (index .CmdArgs 1))}}
    {{if $name}}
      {{$amount = 1}}
      {{if gt (len .CmdArgs) 2}}
        {{$amount = (toInt (index .CmdArgs 1))}}
        {{$nb = $amount}}
      {{end}}
    {{end}}
  {{end}}
  {{$msg = joinStr "" $user " a abandonné " $nb " " $item "."}}
  {{$cver := false}}
  {{$compo := lower (reFind `(?i)(bc|lc|cb|sf|cu|\[X\]|armure)` $item)}}
  {{$chargeur := reFind `(?i)chargeur` $item}}
  {{$sac := (reFind `(?i)(Sacoche$|Sac à dos|(Sacoche ceinture))` $item)}}
  {{$mimp := (reFind `(?i)(perforant|burst|soutien|altération|schéma|passif|force|résistance|cognition|furtivité|vision|vitalité|guérison)` $item)}}
  {{if $chargeur}}
    {{$item = reFind `(?i)(fusil|pistolet|canon)` $item}}
    {{$item = print "[CHARGEUR] " $item}}
    {{$cver = true}}
  {{else if $compo}}
    {{if eq $compo "bc"}}
      {{$item = "[C] Biocomposant"}}
    {{else if eq $compo "lc"}}
      {{$item = "[C] Liquide Cytomorphe"}}
    {{else if eq $compo "cb"}}
      {{$item = "[C] Cellule Bionotropique"}}
    {{else if eq $compo "sf"}}
      {{$item = "[C] Substrat Ferreux"}}
    {{else if eq $compo "cu"}}
      {{$item = "[C] Composant Universel"}}
    {{else if eq $compo "armure"}}
      {{$item = "[X] Armure"}}
    {{end}}
  {{else if $sac}}
    {{$item = print "[E] " (title (lower $sac))}}
  {{else if $mimp}}
    {{if eq $mimp "perforant" "burst" "soutien" "altération" "schéma" "passif"}}
      {{$item = print "[MODULE] " $mimp}}
    {{else if eq $mimp "force" "résistance" "cognition" "furtivité" "vision" "vitalité" "guérison"}}
      {{$item = print "[IMPLANT] " $mimp}}
    {{else if and (reFind `-bdg` .Message.Content) (not $compo) (not $mimp) (ne $cver true) (not $sac) (not (reFind `\[X\]` $item))}}
      {{$item = print "[BDG]" $item }}
    {{end}}
  {{end}}
  {{$arme := lower (reFind `(?i)(poigne|épée|masse|pistolet|fusil|canon|couteau|^\[A\]|^\[CHARGEUR\]|^\[E\])` $item)}}
  {{if and (eq $arme "poigne" "épée" "masse" "pistolet" "fusil" "canon" "couteau") (ne $arme "[A]") (ne $arme "[chargeur]") (ne $arme "[e]")}}
    {{$item = print "[A] " $item}}
  {{end}}
  
  {{$dI := sdict}}
  {{with ($depot.Get $chan)}}
    {{$dI = sdict .}}
  {{end}}

  {{if and ($equip.Get $item) (le (toInt $amount) (toInt ($equip.Get $item)))}}
    {{if $arme}}
      {{if and (not $sac) (ne $cver true)}}
        {{if lt $amount $mstuff}}
          {{$place.Set "s_stuff" (add $sstuff $amount)}}
        {{else if eq $amount $mstuff}}
          {{$place.Set "s_stuff" $mstuff}}
        {{end}}
          {{$equip.Set $item (sub (toInt ($equip.Get $item)) $amount)}}
          {{$dI.Set $item (add (toInt ($dI.Get $item)) $amount)}}
      {{else if $sac}}
        {{$ps := 0}}
        {{$pc := 0}}
        {{$as := 0}}
        {{$ac := 0}}
        {{with ($sid.Get $item)}}
          {{$ps = .ps}}
          {{$pc = .pc}}
          {{$as = .as}}
          {{$ac = .ac}}
        {{end}}
        {{$sstuff = sub $sstuff $as}}
        {{$sconso = sub $sconso $ac}}
        {{if or (le $sstuff 0) (le $sconso 0)}}
          {{$reste = joinStr "" $user ", votre " $item " est rempli, vous ne pouvez pas le laisser ! Vous devez le vider avant."}}
        {{else}}
          {{$dI.Set $item (add (toInt ($dI.Get $item)) $amount)}}
          {{$place.Set "s_stuff" $sstuff}}
          {{$place.Set "s_conso" $sconso}}
          {{$place.Set "max_stuff" $ps}}
          {{$place.Set "max_conso" $pc}}
          {{$equip.Del $item}}
          {{$msg = joinStr "" $user " a abandonné son " $item}}
        {{end}}
      {{end}}
    {{else if or (eq $cver true) (not $compo)}}
      {{if lt $amount (toInt $mconso)}}
        {{$dI.Set $item (add (toInt ($dI.Get $item)) $amount)}}
        {{$place.Set "s_conso" (add $amount $sconso)}}
        {{$equip.Set $item (sub (toInt ($equip.Get $item)) $amount)}}
        {{$msg = joinStr "" $user "a abandonné" $nb $item "."}}
      {{else if eq $amount (toInt $mconso)}}
        {{$dI.Set $item (add (toInt ($dI.Get $item)) $amount)}}
        {{$place.Set "s_conso" $mconso}}
        {{$equip.Set $item (sub (toInt ($equip.Get $item)) $amount)}}
      {{end}}
    {{else if $compo}}
      {{$dI.Set $item (add (toInt ($dI.Get $item)) $amount)}}
      {{$equip.Set $item (sub (toInt ($equip.Get $item)) $amount)}}
    {{end}}
    {{if le (toInt ($equip.Get $item)) 0}}
      {{$equip.Del $item}}
    {{end}}
    {{$reste = joinStr "" "\n" $user " : il vous reste " ($place.Get "s_stuff") " places d'équipements et " ($place.Get "s_conso") " places de consommables. "}} 
    {{dbSet $id "équipement" $equip }}
    {{dbSet $id "place" $place}}
    {{$depot.Set $chan $dI}}
    {{dbSet 0 "depot_sol" $depot}}
  {{else}}
    {{$reste = joinStr "" $user " : L'objet n'existe pas dans l'équipement ou il n'y a en a pas assez." }}
  {{end}}
{{else}}
  **Usage** : `$depot item quantité (>reroll)`
{{end}}
{{$msg = print $msg "\n <:next:723131844643651655> <#" .Channel.ID ">" }}
{{sendMessage $log $msg}}
{{$idr := sendMessageRetID nil $reste}}
{{deleteTrigger 1}}
{{deleteMessage nil $idr 60}}