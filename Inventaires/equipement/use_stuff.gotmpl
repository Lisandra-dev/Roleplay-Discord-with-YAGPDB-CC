{{/* Databases */}}
{{$name := reFind `(\#\S*)` .Message.Content}}
{{$name = joinStr "" (split $name "#")}}
{{$user := .Member.Nick}}
{{$id := .User.ID }}
{{if $name}}
	{{$user = $name}}
	{{$idperso := (toRune (lower $name))}}
	{{range $idperso}}
		{{- $id = add $id . }}
	{{- end}}
{{else if eq (len $user) 0}}
	{{$user = .User.Username}}
{{end}}
{{$msg := "a utilisé"}}
{{$number := "un"}}

{{$equip := sdict}}
{{with (dbGet $id "équipement")}}
  {{$equip = sdict .Value}}
{{end}}
{{$place := sdict}}
{{with (dbGet $id "place")}}
  {{$place = sdict .Value}}
{{end}}
{{$sstuff := $place.Get "s_stuff"}}
{{$sconso := $place.Get "s_conso"}}
{{$mstuff := $place.Get "max_stuff"}}
{{$mconso := $place.Get "max_conso"}}

{{if .CmdArgs}}
  {{$item := title (index .CmdArgs 0)}}
   {{$amount := 1}}
  {{if gt (len .CmdArgs) 1 }}
    {{$amount = (toInt (index .CmdArgs 1))}}
    {{if $name}}
      {{$amount = 1}}
      {{if gt (len .CmdArgs) 2}}
        {{$amount = (toInt (index .CmdArgs 1))}}
        {{$number = $amount}}
      {{end}}
    {{end}}
  {{end}}
  {{$msg = joinStr "" $user " a utilisé" $number $item "."}}
  {{$mimp := lower (reFind `(?i)(perforant|burst|soutien|altération|schéma|passif|force|résistance|cognition|furtivité|vision|vitalité|guérison|bdg)` $item)}}
  {{if eq $mimp "perforant" "burst" "soutien" "altération" "schéma" "passif"}}
    {{$item = print "[MODULE] " (title $mimp)}}
    {{$msg = joinStr "" $user " a fixé" $number $item "."}}
  {{else if eq $mimp "force" "résistance" "cognition" "furtivité" "vision" "vitalité" "guérison"}}
    {{$item = print "[IMPLANT] " (title $mimp)}}
    {{$msg = joinStr "" $user " a fixé" $number $item "."}}
  {{end}}
  {{$compo := reFind `(?i)(bc|lc|cb|sf|cu)` $item}}
  {{if ($equip.Get $item)}}
    {{if or (not $compo) (not (reFind `(?i)(poigne|épée|masse|pistolet|fusil|canon)` $item)) (not (reFind `(?i)chargeur` $item)) (not (reFind `^\[E\]` $item)) (not (reFind `(?i)^\[X\]` $item))}}
        {{if lt $amount (toInt ($equip.Get $item))}}
          {{$place.Set "s_conso" (add $amount $sconso)}}
          {{$equip.Set $item (sub (toInt ($equip.Get $item)) $amount)}}
        {{else if eq $amount (toInt ($equip.Get $item))}}
          {{$place.Set "s_conso" $mconso}}
          {{$equip.Set $item (sub (toInt ($equip.Get $item)) $amount)}}
        {{else}}
          {{$msg = joinStr "" $user " ne possède pas la quantité spécifiée (" $amount ") pour utiliser " $item "."}}
        {{end}}
      {{if le (toInt ($equip.Get $item)) 0}}
        {{$equip.Del $item}}
      {{end}}
      {{$msg = joinStr "" $msg "\n" $user " : il vous reste " ($place.Get "s_stuff") " places d'équipements et " ($place.Get "s_conso") " places de consommables." }}
      {{dbSet $id "équipement" $equip }}
      {{dbSet $id "place" $place}}
    {{end}}
  {{else}}
    {{$msg = joinStr "" $user " : L'objet n'existe pas dans votre équipement, ou vous n'avez pas la quantité ciblée."}}
  {{end}}
{{end}}
{{sendMessage nil $msg}}
{{deleteTrigger 1}}