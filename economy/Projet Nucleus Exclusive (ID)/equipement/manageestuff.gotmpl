{{$name := reFind `(\#\S*)` .Message.Content}}
{{$name = joinStr "" (split $name "#")}}
{{$user := .Member.Nick}}
{{$id := .User.ID }}
{{if $name}}
	{{$user = $name}}
	{{$idperso := (toRune (lower $name))}}
	{{range $idperso}}
		{{- $id = add $id . }}
	{{- end}}
{{else if eq (len $user) 0}}
	{{$user = .User.Username}}
{{end}}
{{$mention := ""}}

{{if .CmdArgs}}
  {{$secondflag := ""}}
	{{$target := ""}}
	{{$item := ""}}
	{{$amount := 1}}
	{{with .CmdArgs}}
		{{if ge (len .) 1}}
			{{$secondflag = (reFind `\-(add|reset|init|remove)` (index . 0))}}
			{{if ge (len .) 2}}
			{{if $name}}
				{{$target = $id}}
				{{$user = $name}}
				{{$mention = $name}}
			{{else}}
				{{with (userArg (index . 1))}}
					{{$target = .}}
					{{$target = $target.ID}}
					{{$mention = joinStr "" "<@" $target ">"}}
					{{$user = (getMember $target).Nick}}
				{{end}}
			{{end}}
				{{if ge (len .) 3}}
					{{$item = title (index . 2)}}
					{{if (reFind `(?i)chargeur` $item)}}
						{{$weap := reFind `(?i)(fusil|pistolet|canon)` $item}}
						{{$item = print "[CHARGEUR] " (title (lower $weap))}}
					{{end}}
					{{if ge (len .) 4}}
						{{$amount = or (toInt (index . 3)) 1}}
					{{end}}
				{{end}}
			{{end}}
		{{end}}
	{{end}}
	{{if not $secondflag}}
		**Usage** : `$managestuff -(add|reset|init|remove) user item amount`
	{{else}}
		{{$equip := sdict}}
    {{$place := sdict}}
		{{if $target}}
      {{with (dbGet $target "équipement")}}
        {{$equip = sdict .Value}}
      {{end}}
      {{with (dbGet $target "place")}}
        {{$place = sdict .Value}}
      {{end}}
      {{if eq $secondflag "-init"}}
        {{$place.Set "s_conso" 5}}
        {{$place.Set "s_stuff" 2}}
        {{$place.Set "max_conso" 5}}
        {{$place.Set "max_stuff" 2}}
        {{dbSet $target "place" $place}}

      {{else if eq $secondflag "-reset"}}
        {{dbDel $target "équipement"}}
        {{$place.Set "s_conso" 5}}
        {{$place.Set "s_stuff" 2}}
        {{$place.Set "max_conso" 5}}
        {{$place.Set "max_stuff" 2}}
        Inventaire de : {{$mention}} Nettoyé !
        {{dbSet $target "place" $place}}

      {{else if eq $secondflag "-add"}}
        {{$compo := reFind `(?i)(bc|lc|cb|sf|cu)` $item}}
        {{if $compo}}
          {{if eq $compo "bc" "BC" "Bc"}}
            {{$item = "[C] Biocomposant"}}
          {{else if eq $compo "lc" "LC" "Lc"}}
            {{$item = "[C] Liquide Cytomorphe"}}
          {{else if eq $compo "cb" "CB" "Cb"}}
            {{$item = "[C] Cellule Bionotropique"}}
          {{else if eq $compo "sf" "SF" "Sf"}}
            {{$item = "[C] Substrat Ferreux"}}
          {{else if eq $compo "cu" "CU" "Cu"}}
            {{$item = "[C] Composant Universel"}}
          {{end}}
        {{end}}
        {{$sac := (reFind `(?i)(Sacoche|Sac à dos|Sacoche ceinture)` $item)}}
        {{if $sac}}
          {{$item = print "[E]" (title (lower $sac))}}
        {{end}}
        {{$sstuff := $place.Get "s_stuff"}}
        {{$sconso := $place.Get "s_conso"}}
        {{if or (reFind `(?i)(poigne|épée|masse|pistolet|fusil|canon)` $item) (reFind `^\[E\]` $item)}}
          {{if not $sac}}
          {{if le $amount $sstuff }}
            {{$place.Set "s_stuff" (sub $sstuff $amount)}}
            {{$equip.Set $item (add ($equip.Get $item) (toInt $amount))}}
            {{$mention}} a obtenu {{$amount}} {{$item}}.
          {{else}}
            {{$mention}} n'a pas assez de place dans son inventaire. 
          {{end}}
          {{else}}
            {{if or ($equip.Get "[E] Sac À Dos" ) ($equip.Get "[E] Sacoche" ) ($equip.Get "[E] Sacoche Ceinture")}}
              {{$mention}} possède déjà un sac. Merci de retirer l'ancien.
            {{else}}
              {{if eq $item "[E] Sac À Dos" }}
                {{$place.Set "s_stuff" (add $sstuff 3)}}
                {{$place.Set "s_conso" (add $sconso 9)}}
                {{$place.Set "max_stuff" (add $sstuff 3)}}
                {{$place.Set "max_conso" (add $sconso 9)}}
              {{else if eq $item "[E] Sacoche" }}
                {{$place.Set "s_stuff" (add $sstuff 2)}}
                {{$place.Set "s_conso" (add $sconso 6)}}
                {{$place.Set "max_stuff" (add $sstuff 2)}}
                {{$place.Set "max_conso" (add $sconso 6)}}
              {{else if eq $item "[E] Sacoche Ceinture"}}
                {{$place.Set "s_stuff" (add $sstuff 1)}}
                {{$place.Set "s_conso" (add $sconso 3)}}
                {{$place.Set "max_stuff" (add $sstuff 1)}}
                {{$place.Set "max_conso" (add $sconso 3)}}
              {{end}}
              {{$equip.Set $item 1}}
              {{$mention}} a obtenu {{$item}}.
            {{end}}
          {{end}}
        {{else if not $compo}}
          {{if and (le $amount (toInt $sconso))}}
            {{$place.Set "s_conso" (sub $sconso $amount)}}
            {{$equip.Set $item (add ($equip.Get $item) (toInt $amount))}}
            {{$mention}} a obtenu {{$amount}} {{$item}}.          
          {{else}}
            {{$mention}} n'a pas assez de place dans son inventaire.
          {{end}}
        {{else if $compo}}
          {{$equip.Set $item (add ($equip.Get $item) (toInt $amount))}}
          {{$mention}} obtient {{$amount}} {{$item}}, sans prise de place.
        {{end}}
        {{if le (toInt ($place.Get "s_stuff")) 0}}
          {{$place.Set "s_stuff" 0}}
        {{end}}
        {{if le (toInt ($place.Get "s_conso")) 0}}
          {{$place.Set "s_conso" 0}}
        {{end}}
        {{dbSet $target "équipement" $equip}}
        {{dbSet $target "place" $place}}
        {{$mention}} : Il vous reste {{$place.Get "s_stuff"}} places d'équipements et {{$place.Get "s_conso"}} places de consommables. 
      {{end}}  
    {{end}}
  {{end}}
{{end}}
